{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Paul\\\\Documents\\\\Jenipher\\\\React\\\\eShopping\\\\frontend\\\\src\\\\Context\\\\ShopContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { Component, createContext, useEffect, useState } from 'react';\n//import all_product from '../Components/Assets/all_product.js'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst getDefaultCart = () => {\n  let cart = {};\n  for (let i = 0; i < 300 + 1; i++) {\n    cart[i] = 0;\n  }\n  return cart;\n};\nconst ShopContextProvider = props => {\n  _s();\n  const [all_product, setAll_Product] = useState([]);\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n\n  //useeffect hook is used to load when component is loaded\n  useEffect(() => {\n    fetch(`${baseUrl}/allproducts`, {\n      mods: 'cors'\n    }).then(res => res.json()).then(data => {\n      setAll_Product(data);\n    });\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:4000/getcart', {\n        method: 'POST',\n        headers: {\n          Accept: 'Application/form-data',\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          'content-type': 'application/json'\n        },\n        body: \"\"\n      }).then(response => response.json()).then(data => setCartItems(data));\n    }\n  }, []);\n  const addToCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] + 1\n    }));\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:4000/addtocart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"itemId\": itemId\n        })\n      }).then(res => res.json()).then(data => console.log(data));\n    }\n  };\n  const removeFromCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] - 1\n    }));\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:4000/removefromcart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"itemId\": itemId\n        })\n      }).then(res => res.json()).then(data => console.log(data));\n    }\n  };\n  const getCartTotalAmount = () => {\n    let totalAmount = 0;\n    for (let item in cartItems) {\n      if (cartItems[item] > 0) {\n        //check quantity is greater than 0\n        let iteminfo = all_product.find(product => product.id === Number(item));\n        totalAmount += cartItems[item] * iteminfo.new_price; //to access the quantity * by product new price\n      }\n    }\n    return totalAmount;\n  };\n  const getCartCount = () => {\n    let totalitem = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        totalitem += cartItems[item];\n      }\n    }\n    return totalitem;\n  };\n  const contextValue = {\n    getCartTotalAmount,\n    all_product,\n    cartItems,\n    addToCart,\n    removeFromCart,\n    getCartCount\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n_s(ShopContextProvider, \"2TWfLOVtZEcAkOpQXwNNYfVqbAU=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","Component","createContext","useEffect","useState","jsxDEV","_jsxDEV","ShopContext","getDefaultCart","cart","i","ShopContextProvider","props","_s","all_product","setAll_Product","cartItems","setCartItems","fetch","baseUrl","mods","then","res","json","data","localStorage","getItem","method","headers","Accept","body","response","addToCart","itemId","prev","JSON","stringify","console","log","removeFromCart","getCartTotalAmount","totalAmount","item","iteminfo","find","product","id","Number","new_price","getCartCount","totalitem","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Paul/Documents/Jenipher/React/eShopping/frontend/src/Context/ShopContext.jsx"],"sourcesContent":["import React, { Component, createContext, useEffect, useState } from 'react'\r\n//import all_product from '../Components/Assets/all_product.js'\r\n\r\nexport const ShopContext = createContext(null)\r\n\r\nconst getDefaultCart = () => {\r\n    let cart = {}\r\n    for (let i = 0; i < 300 + 1; i++) {\r\n        cart[i] = 0\r\n    }\r\n    return cart\r\n}\r\n\r\nconst ShopContextProvider = (props) => {\r\n    const [all_product, setAll_Product] = useState([])\r\n    const [cartItems, setCartItems] = useState(getDefaultCart())\r\n\r\n    //useeffect hook is used to load when component is loaded\r\n    useEffect(() => {\r\n        fetch(`${baseUrl}/allproducts`, { mods: 'cors' })\r\n            .then((res) => res.json())\r\n            .then((data) => { setAll_Product(data) })\r\n        if (localStorage.getItem('auth-token')) {\r\n            fetch('http://localhost:4000/getcart', {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'Application/form-data',\r\n                    'auth-token': `${localStorage.getItem('auth-token')}`,\r\n                    'content-type': 'application/json'\r\n                },\r\n                body: \"\"\r\n            }).then((response) => response.json())\r\n                .then((data) => setCartItems(data));\r\n        }\r\n\r\n    }, [])\r\n\r\n    const addToCart = (itemId) => {\r\n        setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }))\r\n        if (localStorage.getItem('auth-token')) {\r\n            fetch('http://localhost:4000/addtocart', {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/form-data',\r\n                    'auth-token': `${localStorage.getItem('auth-token')}`,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ \"itemId\": itemId }),\r\n            })\r\n                .then((res) => res.json())\r\n                .then((data) => console.log(data))\r\n        }\r\n    }\r\n    const removeFromCart = (itemId) => {\r\n        setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }))\r\n        if (localStorage.getItem('auth-token')) {\r\n            fetch('http://localhost:4000/removefromcart', {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/form-data',\r\n                    'auth-token': `${localStorage.getItem('auth-token')}`,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ \"itemId\": itemId }),\r\n            })\r\n                .then((res) => res.json())\r\n                .then((data) => console.log(data))\r\n        }\r\n    }\r\n\r\n    const getCartTotalAmount = () => {\r\n        let totalAmount = 0;\r\n        for (let item in cartItems) {\r\n            if (cartItems[item] > 0) { //check quantity is greater than 0\r\n                let iteminfo = all_product.find((product) => product.id === Number(item))\r\n                totalAmount += cartItems[item] * iteminfo.new_price//to access the quantity * by product new price\r\n\r\n            }\r\n        }\r\n        return (totalAmount);\r\n    }\r\n\r\n    const getCartCount = () => {\r\n        let totalitem = 0;\r\n        for (const item in cartItems) {\r\n            if (cartItems[item] > 0) {\r\n                totalitem += cartItems[item]\r\n            }\r\n        }\r\n        return totalitem\r\n    }\r\n\r\n    const contextValue = { getCartTotalAmount, all_product, cartItems, addToCart, removeFromCart, getCartCount }\r\n    return (\r\n        <ShopContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </ShopContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ShopContextProvider"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}